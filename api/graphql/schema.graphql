type Query {
  user(id: ID!): User
  posts: [Post]
  post(id: ID!): Post
  users: [User]
  profile(id: ID!): [Post]
}

type Mutation {
  createPost(input: CreatePostInput!): Post
  deletePost(id: ID!): Post
  updatePost(input: UpdatePostInput!): Post
  createComment(input: CreateCommentInput!): Comment
  updateComment(input: UpdateCommentInput!): Comment
  deleteComment(id: ID!): Comment
  followUser(followingId: ID!): FollowUser
  unfollowUser(followingId: ID!): FollowUser
}

type FollowUser {
  followingId: ID!
  followerId: ID!
}

type Comment {
  id: ID!
  comment: String!
  user: User!
  post: Post!
}

type Post {
  id: ID!
  title: String!
  content: String!
  imageUrl: String
  user: User!
  comments: [Comment!]
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  posts: [Post!]
}

input CreatePostInput {
  title: String!
  content: String!
  imageUrl: String!
}

input UpdatePostInput {
  id: ID!
  title: String!
  content: String!
  imageUrl: String!
}

input CreateCommentInput {
  comment: String!
  post: ID!
}

input UpdateCommentInput {
  id: ID!
  comment: String!
}
